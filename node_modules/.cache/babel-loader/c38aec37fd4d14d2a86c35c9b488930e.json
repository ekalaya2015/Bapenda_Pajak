{"ast":null,"code":"var _jsxFileName = \"/home/rachmat/Documents/Emtres/bapenda-pajak/src/authentication/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport { useProvideAuth } from './auth-methods/jwt-auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext(); // Provider component that wraps your app and makes auth object ..\n// ... available to any child component that calls useAuth().\n\nexport function AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n} // Hook for child components to get the auth object ...\n// ... and re-render when it changes.\n\n_s(AuthProvider, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/rachmat/Documents/Emtres/bapenda-pajak/src/authentication/index.js"],"names":["React","createContext","useContext","useProvideAuth","authContext","AuthProvider","children","auth","useAuth"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC,C,CACA;AACA;;AAEA,OAAO,SAASI,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAMC,IAAI,GAAGJ,cAAc,EAA3B;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,IAA7B;AAAA,cAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;;GANgBD,Y;UACDF,c;;;KADCE,Y;AAQhB,OAAO,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAON,UAAU,CAACE,WAAD,CAAjB;AACD,CAFM;;IAAMI,O","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { useProvideAuth } from './auth-methods/jwt-auth';\n\nconst authContext = createContext();\n// Provider component that wraps your app and makes auth object ..\n// ... available to any child component that calls useAuth().\n\nexport function AuthProvider({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n"]},"metadata":{},"sourceType":"module"}