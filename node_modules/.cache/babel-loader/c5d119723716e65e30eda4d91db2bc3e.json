{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { httpClient } from \"../../../util/Api\";\nexport const useProvideAuth = () => {\n  _s();\n\n  const [authUser, setAuthUser] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoadingUser, setLoadingUser] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const fetchStart = () => {\n    setLoading(true);\n    setError('');\n  };\n\n  const fetchSuccess = () => {\n    setLoading(false);\n    setError('');\n  };\n\n  const fetchError = error => {\n    setLoading(false);\n    setError(error);\n  };\n\n  const userLogin = (user, callbackFun) => {\n    fetchStart();\n    httpClient // .post('auth/login', user)\n    .post('', user).then(_ref => {\n      let {\n        data\n      } = _ref;\n\n      if (data.result) {\n        fetchSuccess();\n        httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n        localStorage.setItem('token', data.token.access_token);\n        getAuthUser();\n        if (callbackFun) callbackFun();\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      fetchError(error.message);\n    });\n  };\n\n  const userSignup = (user, callbackFun) => {\n    fetchStart();\n    httpClient.post('auth/register', user).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n\n      if (data.result) {\n        fetchSuccess();\n        localStorage.setItem('token', data.token.access_token);\n        httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n        getAuthUser();\n        if (callbackFun) callbackFun();\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      fetchError(error.message);\n    });\n  };\n\n  const sendPasswordResetEmail = (email, callbackFun) => {\n    fetchStart();\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const confirmPasswordReset = (code, password, callbackFun) => {\n    fetchStart();\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const renderSocialMediaLogin = () => null;\n\n  const userSignOut = callbackFun => {\n    fetchStart();\n    httpClient.post('auth/logout').then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n\n      if (data.result) {\n        fetchSuccess();\n        httpClient.defaults.headers.common['Authorization'] = '';\n        localStorage.removeItem('token');\n        setAuthUser(false);\n        if (callbackFun) callbackFun();\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      fetchError(error.message);\n    });\n  };\n\n  const getAuthUser = () => {\n    fetchStart();\n    httpClient.post('auth/me').then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n\n      if (data.user) {\n        fetchSuccess();\n        setAuthUser(data.user);\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      httpClient.defaults.headers.common['Authorization'] = '';\n      fetchError(error.message);\n    });\n  }; // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    }\n\n    httpClient.post('auth/me').then(_ref5 => {\n      let {\n        data\n      } = _ref5;\n\n      if (data.user) {\n        setAuthUser(data.user);\n      }\n\n      setLoadingUser(false);\n    }).catch(function () {\n      localStorage.removeItem('token');\n      httpClient.defaults.headers.common['Authorization'] = '';\n      setLoadingUser(false);\n    });\n  }, []); // Return the user object and auth methods\n\n  return {\n    isLoadingUser,\n    isLoading,\n    authUser,\n    error,\n    setError,\n    setAuthUser,\n    getAuthUser,\n    userLogin,\n    userSignup,\n    userSignOut,\n    renderSocialMediaLogin,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  };\n};\n\n_s(useProvideAuth, \"s4jthY36/nvZN3itu04Ag9XzSXY=\");","map":{"version":3,"sources":["/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/authentication/auth-methods/jwt-auth/index.js"],"names":["useEffect","useState","httpClient","useProvideAuth","authUser","setAuthUser","error","setError","isLoadingUser","setLoadingUser","isLoading","setLoading","fetchStart","fetchSuccess","fetchError","userLogin","user","callbackFun","post","then","data","result","defaults","headers","common","token","access_token","localStorage","setItem","getAuthUser","catch","message","userSignup","sendPasswordResetEmail","email","setTimeout","confirmPasswordReset","code","password","renderSocialMediaLogin","userSignOut","removeItem","getItem"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport {httpClient} from \"../../../util/Api\";\n\nexport const useProvideAuth = () => {\n  const [authUser, setAuthUser] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoadingUser, setLoadingUser] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const fetchStart = () => {\n    setLoading(true);\n    setError('');\n  };\n\n  const fetchSuccess = () => {\n    setLoading(false);\n    setError('');\n  };\n\n  const fetchError = (error) => {\n    setLoading(false);\n    setError(error);\n  };\n\n  const userLogin = (user, callbackFun) => {\n    fetchStart();\n    httpClient\n    // .post('auth/login', user)\n\n      .post( '', user)\n      .then(({ data }) => {\n        if (data.result) {\n          fetchSuccess();\n          httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n          localStorage.setItem('token', data.token.access_token);\n          getAuthUser();\n          if (callbackFun) callbackFun();\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        fetchError(error.message);\n      });\n  };\n\n  const userSignup = (user, callbackFun) => {\n    fetchStart();\n    httpClient\n      .post('auth/register', user)\n      .then(({ data }) => {\n        if (data.result) {\n          fetchSuccess();\n          localStorage.setItem('token', data.token.access_token);\n          httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n          getAuthUser();\n          if (callbackFun) callbackFun();\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        fetchError(error.message);\n      });\n  };\n\n  const sendPasswordResetEmail = (email, callbackFun) => {\n    fetchStart();\n\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const confirmPasswordReset = (code, password, callbackFun) => {\n    fetchStart();\n\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const renderSocialMediaLogin = () => null;\n\n  const userSignOut = (callbackFun) => {\n    fetchStart();\n    httpClient\n      .post('auth/logout')\n      .then(({ data }) => {\n        if (data.result) {\n          fetchSuccess();\n          httpClient.defaults.headers.common['Authorization'] = '';\n          localStorage.removeItem('token');\n          setAuthUser(false);\n          if (callbackFun) callbackFun();\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        fetchError(error.message);\n      });\n  };\n\n  const getAuthUser = () => {\n    fetchStart();\n    httpClient\n      .post('auth/me')\n      .then(({ data }) => {\n        if (data.user) {\n          fetchSuccess();\n          setAuthUser(data.user);\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        httpClient.defaults.headers.common['Authorization'] = '';\n        fetchError(error.message);\n      });\n  };\n\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    }\n\n    httpClient\n      .post('auth/me')\n      .then(({ data }) => {\n        if (data.user) {\n          setAuthUser(data.user);\n        }\n        setLoadingUser(false);\n      })\n      .catch(function () {\n        localStorage.removeItem('token');\n        httpClient.defaults.headers.common['Authorization'] = '';\n        setLoadingUser(false);\n      });\n  }, []);\n\n  // Return the user object and auth methods\n  return {\n    isLoadingUser,\n    isLoading,\n    authUser,\n    error,\n    setError,\n    setAuthUser,\n    getAuthUser,\n    userLogin,\n    userSignup,\n    userSignOut,\n    renderSocialMediaLogin,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}