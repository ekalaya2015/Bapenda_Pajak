{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { httpClient } from \"../../../util/Api\";\nexport const useProvideAuth = () => {\n  _s();\n\n  const [authUser, setAuthUser] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoadingUser, setLoadingUser] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const [Namaa, setNamaa] = useState({});\n  const [useer, setUseer] = useState();\n  let aku = Namaa;\n  useEffect(() => {\n    setUseer(Namaa);\n  }, [Namaa]);\n  console.log(\"Nama>>>>>>>>a\", Namaa);\n\n  const fetchStart = () => {\n    setLoading(true);\n    setError('');\n  };\n\n  const fetchSuccess = () => {\n    setLoading(false);\n    setError('');\n  };\n\n  const fetchError = error => {\n    setLoading(false);\n    setError(error);\n  };\n\n  const userLogin = (user, callbackFun) => {\n    console.log(\"user\", user);\n    setNamaa(user);\n    fetchStart();\n    httpClient // .post('auth/login', user)\n    .get('login?username=' + user.username + '&password=' + user.password, user).then(_ref => {\n      let {\n        data\n      } = _ref;\n\n      if (data) {\n        fetchSuccess();\n        httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data;\n        localStorage.setItem('token', data);\n        getAuthUser();\n        if (callbackFun) callbackFun();\n      } else {\n        fetchError(data.error);\n      }\n\n      console.log(\"data.result\", data);\n    }).catch(function (error) {\n      fetchError(error.message);\n    });\n  }; // const logh  = (user, callbackFun) => {\n  // console.log(\"usert\", user)\n  // const AAA = `login?username=`+user.username+`&password=`+user.password\n  // // return user\n  // }\n  // console.log(\"Log\", logh())\n\n\n  const userSignup = (user, callbackFun) => {\n    fetchStart();\n    httpClient.post('auth/register', user).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n\n      if (data.result) {\n        fetchSuccess();\n        localStorage.setItem('token', data.token);\n        httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token;\n        getAuthUser();\n        if (callbackFun) callbackFun();\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      fetchError(error.message);\n    });\n  };\n\n  const sendPasswordResetEmail = (username, callbackFun) => {\n    fetchStart();\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const confirmPasswordReset = (code, password, callbackFun) => {\n    fetchStart();\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const renderSocialMediaLogin = () => null;\n\n  const userSignOut = callbackFun => {\n    fetchStart();\n    httpClient.post('auth/logout').then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n\n      if (data.result) {\n        fetchSuccess();\n        httpClient.defaults.headers.common['Authorization'] = '';\n        localStorage.removeItem('token');\n        setAuthUser(false);\n        if (callbackFun) callbackFun();\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      fetchError(error.message);\n    });\n  };\n\n  const getAuthUser = () => {\n    fetchStart();\n    console.log(\"NamaaNamaaNamaa\", Namaa);\n    httpClient // .post('/login')\n    .get('login?username=' + Namaa.username + '&password=' + Namaa.password, Namaa) // .post('auth/me')\n    .then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n\n      if (data.user) {\n        fetchSuccess();\n        setAuthUser(data.user);\n      } else {\n        fetchError(data.error);\n      }\n    }).catch(function (error) {\n      httpClient.defaults.headers.common['Authorization'] = '';\n      fetchError(error.message);\n    });\n  }; // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // const user = localStorage.getItem('user');\n    // setUsery({ Namaa })\n\n    console.log(\"sssfdsf\", Namaa.username); // if (token && Namaa) {\n\n    if (token) {\n      httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    }\n\n    httpClient // .post('auth/me')\n    // .get('login?username=' + \"emtres\" + '&password=' + 'P@ssw0rd', Namaa)\n    .get('login?username=' + Namaa.username + '&password=' + Namaa.password, Namaa).then(_ref5 => {\n      let {\n        data\n      } = _ref5;\n\n      if (data.user) {\n        setAuthUser(data.user);\n      }\n\n      setLoadingUser(false);\n    }).catch(function () {\n      localStorage.removeItem('token');\n      httpClient.defaults.headers.common['Authorization'] = '';\n      setLoadingUser(false);\n    });\n  }, [], [Namaa]); // Return the user object and auth methods\n\n  return {\n    isLoadingUser,\n    isLoading,\n    authUser,\n    error,\n    setError,\n    setAuthUser,\n    getAuthUser,\n    userLogin,\n    userSignup,\n    userSignOut,\n    renderSocialMediaLogin,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  };\n}; // import { useEffect, useState } from 'react';\n// import {httpClient} from \"../../../util/Api\";\n// export const useProvideAuth = () => {\n//   const [authUser, setAuthUser] = useState(null);\n//   const [error, setError] = useState('');\n//   const [isLoadingUser, setLoadingUser] = useState(true);\n//   const [isLoading, setLoading] = useState(false);\n//   const fetchStart = () => {\n//     setLoading(true);\n//     setError('');\n//   };\n//   const fetchSuccess = () => {\n//     setLoading(false);\n//     setError('');\n//   };\n//   const fetchError = (error) => {\n//     setLoading(false);\n//     setError(error);\n//   };\n//   const userLogin = (user, callbackFun) => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/login', user)\n//       .then(({ data }) => {\n//         if (data.result) {\n//           fetchSuccess();\n//           httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n//           localStorage.setItem('token', data.token.access_token);\n//           getAuthUser();\n//           if (callbackFun) callbackFun();\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         fetchError(error.message);\n//       });\n//   };\n//   const userSignup = (user, callbackFun) => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/register', user)\n//       .then(({ data }) => {\n//         if (data.result) {\n//           fetchSuccess();\n//           localStorage.setItem('token', data.token.access_token);\n//           httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n//           getAuthUser();\n//           if (callbackFun) callbackFun();\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         fetchError(error.message);\n//       });\n//   };\n//   const sendPasswordResetEmail = (email, callbackFun) => {\n//     fetchStart();\n//     setTimeout(() => {\n//       fetchSuccess();\n//       if (callbackFun) callbackFun();\n//     }, 300);\n//   };\n//   const confirmPasswordReset = (code, password, callbackFun) => {\n//     fetchStart();\n//     setTimeout(() => {\n//       fetchSuccess();\n//       if (callbackFun) callbackFun();\n//     }, 300);\n//   };\n//   const renderSocialMediaLogin = () => null;\n//   const userSignOut = (callbackFun) => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/logout')\n//       .then(({ data }) => {\n//         if (data.result) {\n//           fetchSuccess();\n//           httpClient.defaults.headers.common['Authorization'] = '';\n//           localStorage.removeItem('token');\n//           setAuthUser(false);\n//           if (callbackFun) callbackFun();\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         fetchError(error.message);\n//       });\n//   };\n//   const getAuthUser = () => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/me')\n//       .then(({ data }) => {\n//         if (data.user) {\n//           fetchSuccess();\n//           setAuthUser(data.user);\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         httpClient.defaults.headers.common['Authorization'] = '';\n//         fetchError(error.message);\n//       });\n//   };\n//   // Subscribe to user on mount\n//   // Because this sets state in the callback it will cause any ...\n//   // ... component that utilizes this hook to re-render with the ...\n//   // ... latest auth object.\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n//     }\n//     httpClient\n//       .post('auth/me')\n//       .then(({ data }) => {\n//         if (data.user) {\n//           setAuthUser(data.user);\n//         }\n//         setLoadingUser(false);\n//       })\n//       .catch(function () {\n//         localStorage.removeItem('token');\n//         httpClient.defaults.headers.common['Authorization'] = '';\n//         setLoadingUser(false);\n//       });\n//   }, []);\n//   // Return the user object and auth methods\n//   return {\n//     isLoadingUser,\n//     isLoading,\n//     authUser,\n//     error,\n//     setError,\n//     setAuthUser,\n//     getAuthUser,\n//     userLogin,\n//     userSignup,\n//     userSignOut,\n//     renderSocialMediaLogin,\n//     sendPasswordResetEmail,\n//     confirmPasswordReset,\n//   };\n// };\n\n_s(useProvideAuth, \"0EpdZwE9NRILsvkVfU6pHx5HLuc=\");","map":{"version":3,"sources":["/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/authentication/auth-methods/jwt-auth/index.js"],"names":["useEffect","useState","useContext","httpClient","useProvideAuth","authUser","setAuthUser","error","setError","isLoadingUser","setLoadingUser","isLoading","setLoading","Namaa","setNamaa","useer","setUseer","aku","console","log","fetchStart","fetchSuccess","fetchError","userLogin","user","callbackFun","get","username","password","then","data","defaults","headers","common","localStorage","setItem","getAuthUser","catch","message","userSignup","post","result","token","sendPasswordResetEmail","setTimeout","confirmPasswordReset","code","renderSocialMediaLogin","userSignOut","removeItem","getItem"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { httpClient } from \"../../../util/Api\";\n\nexport const useProvideAuth = () => {\n  const [authUser, setAuthUser] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoadingUser, setLoadingUser] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const [Namaa, setNamaa] = useState({})\n  const [useer, setUseer] = useState()\nlet aku = Namaa\n  useEffect(() => {\n    setUseer(Namaa)\n  }, [Namaa]\n\n  )\n  console.log(\"Nama>>>>>>>>a\", Namaa)\n\n\n  const fetchStart = () => {\n    setLoading(true);\n    setError('');\n  };\n\n  const fetchSuccess = () => {\n    setLoading(false);\n    setError('');\n  };\n\n  const fetchError = (error) => {\n    setLoading(false);\n    setError(error);\n  };\n\n  const userLogin = (user, callbackFun) => {\n    console.log(\"user\", user)\n    setNamaa(user)\n    fetchStart();\n    httpClient\n    // .post('auth/login', user)\n\n      .get('login?username=' + user.username + '&password=' + user.password, user)\n      .then(({ data }) => {\n        if (data) {\n          fetchSuccess();\n          httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data;\n          localStorage.setItem('token', data);\n          getAuthUser();\n          if (callbackFun) callbackFun();\n        } else {\n          fetchError(data.error);\n        }     \n         console.log(\"data.result\",data)\n\n      })\n      .catch(function (error) {\n        fetchError(error.message);\n      });\n  };\n  // const logh  = (user, callbackFun) => {\n  // console.log(\"usert\", user)\n  // const AAA = `login?username=`+user.username+`&password=`+user.password\n\n  // // return user\n  // }\n\n  // console.log(\"Log\", logh())\n  const userSignup = (user, callbackFun) => {\n    fetchStart();\n    httpClient\n      .post('auth/register', user)\n      .then(({ data }) => {\n        if (data.result) {\n          fetchSuccess();\n          localStorage.setItem('token', data.token);\n          httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token;\n          getAuthUser();\n          if (callbackFun) callbackFun();\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        fetchError(error.message);\n      });\n  };\n\n  const sendPasswordResetEmail = (username, callbackFun) => {\n    fetchStart();\n\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const confirmPasswordReset = (code, password, callbackFun) => {\n    fetchStart();\n\n    setTimeout(() => {\n      fetchSuccess();\n      if (callbackFun) callbackFun();\n    }, 300);\n  };\n\n  const renderSocialMediaLogin = () => null;\n\n  const userSignOut = (callbackFun) => {\n    fetchStart();\n    httpClient\n      .post('auth/logout')\n      .then(({ data }) => {\n        if (data.result) {\n          fetchSuccess();\n          httpClient.defaults.headers.common['Authorization'] = '';\n          localStorage.removeItem('token');\n          setAuthUser(false);\n          if (callbackFun) callbackFun();\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        fetchError(error.message);\n      });\n  };\n\n  const getAuthUser = () => {\n    fetchStart();\n    console.log(\"NamaaNamaaNamaa\", Namaa)\n    httpClient\n      // .post('/login')\n      .get('login?username=' + Namaa.username + '&password=' + Namaa.password, Namaa)\n      // .post('auth/me')\n\n      .then(({ data }) => {\n        if (data.user) {\n          fetchSuccess();\n          setAuthUser(data.user);\n        } else {\n          fetchError(data.error);\n        }\n      })\n      .catch(function (error) {\n        httpClient.defaults.headers.common['Authorization'] = '';\n        fetchError(error.message);\n      });\n  };\n\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    // const user = localStorage.getItem('user');\n    // setUsery({ Namaa })\n    console.log(\"sssfdsf\", Namaa.username)\n      // if (token && Namaa) {\n        if (token) {\n\n        httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n      }\n      httpClient\n      // .post('auth/me')\n        // .get('login?username=' + \"emtres\" + '&password=' + 'P@ssw0rd', Namaa)\n\n        .get('login?username=' + Namaa.username + '&password=' + Namaa.password, Namaa)\n\n        .then(({ data }) => {\n          if (data.user) {\n            setAuthUser(data.user);\n          }\n          setLoadingUser(false);\n        })\n        .catch(function () {\n          localStorage.removeItem('token');\n          httpClient.defaults.headers.common['Authorization'] = '';\n          setLoadingUser(false);\n        })\n    \n  }, [], [Namaa]);\n\n  // Return the user object and auth methods\n  return {\n    isLoadingUser,\n    isLoading,\n    authUser,\n    error,\n    setError,\n    setAuthUser,\n    getAuthUser,\n    userLogin,\n    userSignup,\n    userSignOut,\n    renderSocialMediaLogin,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n  };\n};\n\n\n// import { useEffect, useState } from 'react';\n// import {httpClient} from \"../../../util/Api\";\n\n// export const useProvideAuth = () => {\n//   const [authUser, setAuthUser] = useState(null);\n//   const [error, setError] = useState('');\n//   const [isLoadingUser, setLoadingUser] = useState(true);\n//   const [isLoading, setLoading] = useState(false);\n\n//   const fetchStart = () => {\n//     setLoading(true);\n//     setError('');\n//   };\n\n//   const fetchSuccess = () => {\n//     setLoading(false);\n//     setError('');\n//   };\n\n//   const fetchError = (error) => {\n//     setLoading(false);\n//     setError(error);\n//   };\n\n//   const userLogin = (user, callbackFun) => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/login', user)\n//       .then(({ data }) => {\n//         if (data.result) {\n//           fetchSuccess();\n//           httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n//           localStorage.setItem('token', data.token.access_token);\n//           getAuthUser();\n//           if (callbackFun) callbackFun();\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         fetchError(error.message);\n//       });\n//   };\n\n//   const userSignup = (user, callbackFun) => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/register', user)\n//       .then(({ data }) => {\n//         if (data.result) {\n//           fetchSuccess();\n//           localStorage.setItem('token', data.token.access_token);\n//           httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + data.token.access_token;\n//           getAuthUser();\n//           if (callbackFun) callbackFun();\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         fetchError(error.message);\n//       });\n//   };\n\n//   const sendPasswordResetEmail = (email, callbackFun) => {\n//     fetchStart();\n\n//     setTimeout(() => {\n//       fetchSuccess();\n//       if (callbackFun) callbackFun();\n//     }, 300);\n//   };\n\n//   const confirmPasswordReset = (code, password, callbackFun) => {\n//     fetchStart();\n\n//     setTimeout(() => {\n//       fetchSuccess();\n//       if (callbackFun) callbackFun();\n//     }, 300);\n//   };\n\n//   const renderSocialMediaLogin = () => null;\n\n//   const userSignOut = (callbackFun) => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/logout')\n//       .then(({ data }) => {\n//         if (data.result) {\n//           fetchSuccess();\n//           httpClient.defaults.headers.common['Authorization'] = '';\n//           localStorage.removeItem('token');\n//           setAuthUser(false);\n//           if (callbackFun) callbackFun();\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         fetchError(error.message);\n//       });\n//   };\n\n//   const getAuthUser = () => {\n//     fetchStart();\n//     httpClient\n//       .post('auth/me')\n//       .then(({ data }) => {\n//         if (data.user) {\n//           fetchSuccess();\n//           setAuthUser(data.user);\n//         } else {\n//           fetchError(data.error);\n//         }\n//       })\n//       .catch(function (error) {\n//         httpClient.defaults.headers.common['Authorization'] = '';\n//         fetchError(error.message);\n//       });\n//   };\n\n//   // Subscribe to user on mount\n//   // Because this sets state in the callback it will cause any ...\n//   // ... component that utilizes this hook to re-render with the ...\n//   // ... latest auth object.\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       httpClient.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n//     }\n\n//     httpClient\n//       .post('auth/me')\n//       .then(({ data }) => {\n//         if (data.user) {\n//           setAuthUser(data.user);\n//         }\n//         setLoadingUser(false);\n//       })\n//       .catch(function () {\n//         localStorage.removeItem('token');\n//         httpClient.defaults.headers.common['Authorization'] = '';\n//         setLoadingUser(false);\n//       });\n//   }, []);\n\n//   // Return the user object and auth methods\n//   return {\n//     isLoadingUser,\n//     isLoading,\n//     authUser,\n//     error,\n//     setError,\n//     setAuthUser,\n//     getAuthUser,\n//     userLogin,\n//     userSignup,\n//     userSignOut,\n//     renderSocialMediaLogin,\n//     sendPasswordResetEmail,\n//     confirmPasswordReset,\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}