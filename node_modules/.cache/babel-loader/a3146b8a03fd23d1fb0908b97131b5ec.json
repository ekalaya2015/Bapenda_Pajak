{"ast":null,"code":"import isExpired from './isExpired';\n\nconst reqOptions = function (method, body) {\n  let needToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const headers = {};\n  const options = {\n    method,\n    headers\n  };\n\n  if (needToken) {\n    const token = localStorage.getItem('token');\n    headers.Authorization = token;\n\n    if (isExpired(token) || !token) {\n      localStorage.removeItem('token');\n      window.location.replace('/login');\n      return false;\n    }\n  }\n\n  if (method !== 'GET') {\n    headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(body);\n  }\n\n  return options;\n};\n\nexport default reqOptions;","map":{"version":3,"sources":["/home/rachmat/Documents/Emtres/bapenda-pajak/src/util/reqOptions.js"],"names":["isExpired","reqOptions","method","body","needToken","headers","options","token","localStorage","getItem","Authorization","removeItem","window","location","replace","JSON","stringify"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAG,UAACC,MAAD,EAASC,IAAT,EAAoC;AAAA,MAArBC,SAAqB,uEAAT,IAAS;AACrD,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,GAAG;AACdJ,IAAAA,MADc;AAEdG,IAAAA;AAFc,GAAhB;;AAIA,MAAID,SAAJ,EAAe;AACb,UAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAJ,IAAAA,OAAO,CAACK,aAAR,GAAwBH,KAAxB;;AACA,QAAIP,SAAS,CAACO,KAAD,CAAT,IAAoB,CAACA,KAAzB,EAAgC;AAC9BC,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AACA,aAAO,KAAP;AACD;AACF;;AACD,MAAIZ,MAAM,KAAK,KAAf,EAAsB;AACpBG,IAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACAC,IAAAA,OAAO,CAACH,IAAR,GAAeY,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAf;AACD;;AACD,SAAOG,OAAP;AACD,CApBD;;AAsBA,eAAeL,UAAf","sourcesContent":["import isExpired from './isExpired';\n \nconst reqOptions = (method, body, needToken = true) => {\n  const headers = {};\n  const options = {\n    method,\n    headers,\n  };\n  if (needToken) {\n    const token = localStorage.getItem('token');\n    headers.Authorization = token;\n    if (isExpired(token) || !token) {\n      localStorage.removeItem('token');\n      window.location.replace('/login');\n      return false;\n    }\n  }\n  if (method !== 'GET') {\n    headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(body);\n  }\n  return options;\n};\n \nexport default reqOptions;\n"]},"metadata":{},"sourceType":"module"}