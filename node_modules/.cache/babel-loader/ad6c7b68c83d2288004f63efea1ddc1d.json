{"ast":null,"code":"var _jsxFileName = \"/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/routes/Dashboard/LatestTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table } from \"antd\";\nimport Widget from \"components/Widget/index\";\nimport reqOptions from \"../../util/reqOptions\"; // import { TokenStorageService } from './token-storage.service';\n\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Transaction ID',\n  dataIndex: 'transaction_id',\n  render: text => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"gx-text-red\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }, this);\n  }\n}, {\n  title: 'Merchant ID\t',\n  dataIndex: 'merchant_id'\n}];\nconst data = [{\n  key: '1',\n  transaction_id: '0.24 BTC',\n  rate: '1 BTC = $740',\n  merchant_id: '08.10.17',\n  fee: '-$2.33'\n}, {\n  key: '2',\n  transaction_id: '0.34 RPL',\n  rate: '1 RPL = $80.2',\n  merchant_id: '08.03.17',\n  fee: '-$1.23'\n}, {\n  key: '3',\n  transaction_id: '0.24 BTC',\n  rate: '1 BTC = $740',\n  merchant_id: '07.29.17',\n  fee: '-$3.22'\n}, {\n  key: '4',\n  transaction_id: '0.22 BTC',\n  rate: '1 BTC = $740',\n  merchant_id: '07.28.17',\n  fee: '-$3.22'\n}, {\n  key: '5',\n  transaction_id: '0.74 LTE',\n  rate: '1 LTE = $99',\n  merchant_id: '05.22.17',\n  fee: '-$2.21'\n}];\n\nconst LatestTransaction = () => {\n  _s();\n\n  const [latestTransaction, setLatestTransaction] = useState();\n  console.log(\"latestTransaction\", latestTransaction);\n  useEffect(() => {\n    getLatestTransaction();\n  }, []); // const QQQ = localStorage.getItem(\"token\")\n  // console.log(\"QQQ\", QQQ)\n  // let body={\"startdate\":start,\"enddate\":end}\n  // let headers={\"x-api-key\":this.tokenService.getUser()['api-key']}\n  // return this.http.post<any>(DATA_API+'orders',body,{headers})\n  // TOKEN LOCAL STORAGE\n\n  const getUser = () => {\n    const user = window.sessionStorage.getItem('token');\n\n    if (user) {\n      let access_token = JSON.parse(user).access_token;\n      let decoded_token = jwtDecode(access_token);\n      return decoded_token; //return JSON.parse(user);\n    }\n\n    return false;\n  };\n\n  const getLatestTransaction = async dataLatest => {\n    // try {\n    //   const response = await fetch(\n    //    \"https://api.raspi-geek.com/v1/latestorder\",\n    //     {\n    //       method: \"GET\",\n    //       //  headers:{\"x-api-key\":localStorage.getItem(\"token\")['api-key']}\n    //       // headers: {\n    //       //   \"Content-Type\": \"application/json\",\n    //       //   Authorization: localStorage.getItem(\"token\"),\n    //       // },\n    //       headers: {'Content-Type': 'application/json', \n    //       Authorization: localStorage.getItem(\"token\")\n    //     },\n    //   // body: JSON.stringify(data),\n    //     }\n    //   );\n    //   let res = await response.json();\n    //   // let res =response\n    //   // console.warn(xhr.responseText)\n    //   // console.log(\"resresres\", res.data['Records'].forEach(element => {\n    //   //   this.newArr.push({ \"invoice_id\": element[0]['stringValue'], \"merchant_id\": element[2]['stringValue'], \"total_value\": element[3]['stringValue'], \"created_at\": element[1]['stringValue'] })\n    //   // }));\n    //   setLatestTransaction(res);\n    // } catch (err) {\n    //   console.log(err.message);\n    // }\n    // try {\n    //   const res = await fetch(`${process.env.REACT_APP_URL}/latestorder${dataLatest}`,\n    //   {\n    //     method: \"GET\",\n    //            headers: {\n    //              \"Content-Type\": \"application/json\",\n    //              Authorization: localStorage.getItem(\"token\"),\n    //            },\n    //   },    reqOptions('GET'))\n    //   const resJson = await res.json()\n    //   // return resJson\n    //   console.log(\"res\", res)\n    //   console.log(\"resJson\", resJson)\n    // } catch (err) {\n    //   console.error('err', err);\n    const token = localStorage.getItem('token');\n    const headers = {\n      'x-api-key': 'api-key',\n      'content-type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n    const response = await fetch(\"https://api.raspi-geek.com/v1/latestorder\", {\n      headers\n    });\n    const ajson = await response.json();\n    console.log('json', ajson);\n    console.log(\"response\", response); //   try {\n    //     const token = localStorage.getItem('token')\n    // const apiURL = `https://api.raspi-geek.com/v1/latestorder`\n    //     const response = await fetch(apiURL, {\n    //             method: 'GET',\n    //             headers: {\n    //               \"x-api-key\":token['api-key'],\n    //                 'Content-type': 'application/json',\n    //                 // 'Authorization': `Bearer ${token}`, // notice the Bearer before your token\n    //             },\n    //             // body: JSON.stringify(yourNewData)\n    //         })\n    //     const json = await response;\n    //     console.log('json', json)\n    //     console.log(\"response\",response)\n    //   } catch (err) {\n    //     console.error('err', err);\n    //   }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    styleName: \"gx-order-history\",\n    title: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2 gx-text-capitalize gx-mb-0\",\n      children: \"10 Latest Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this),\n    extra: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"gx-text-primary gx-mb-0 gx-pointer\",\n      children: \"Detailed History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gx-table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"gx-table-no-bordered\",\n        columns: columns,\n        dataSource: data,\n        pagination: false,\n        bordered: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LatestTransaction, \"EG1/1nk4QvBv5KQK1zy9WT0wbco=\");\n\n_c = LatestTransaction;\nexport default LatestTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestTransaction\");","map":{"version":3,"sources":["/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/routes/Dashboard/LatestTransaction.js"],"names":["React","useState","useEffect","Table","Widget","reqOptions","jwtDecode","columns","title","dataIndex","render","text","data","key","transaction_id","rate","merchant_id","fee","LatestTransaction","latestTransaction","setLatestTransaction","console","log","getLatestTransaction","getUser","user","window","sessionStorage","getItem","access_token","JSON","parse","decoded_token","dataLatest","token","localStorage","headers","response","fetch","ajson","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport Widget from \"components/Widget/index\";\r\nimport reqOptions from \"../../util/reqOptions\";\r\n// import { TokenStorageService } from './token-storage.service';\r\n\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Transaction ID',\r\n    dataIndex: 'transaction_id',\r\n    render: (text) => {\r\n      return <span className=\"gx-text-red\">{text}</span>\r\n    },\r\n  },\r\n  {\r\n    title: 'Merchant ID\t',\r\n    dataIndex: 'merchant_id',\r\n  },\r\n\r\n\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    transaction_id: '0.24 BTC',\r\n    rate: '1 BTC = $740',\r\n    merchant_id: '08.10.17',\r\n    fee: '-$2.33'\r\n  },\r\n  {\r\n    key: '2',\r\n    transaction_id: '0.34 RPL',\r\n    rate: '1 RPL = $80.2',\r\n    merchant_id: '08.03.17',\r\n    fee: '-$1.23'\r\n  },\r\n  {\r\n    key: '3',\r\n    transaction_id: '0.24 BTC',\r\n    rate: '1 BTC = $740',\r\n    merchant_id: '07.29.17',\r\n    fee: '-$3.22'\r\n  },\r\n  {\r\n    key: '4',\r\n    transaction_id: '0.22 BTC',\r\n    rate: '1 BTC = $740',\r\n    merchant_id: '07.28.17',\r\n    fee: '-$3.22'\r\n  },\r\n  {\r\n    key: '5',\r\n    transaction_id: '0.74 LTE',\r\n    rate: '1 LTE = $99',\r\n    merchant_id: '05.22.17',\r\n    fee: '-$2.21'\r\n  }\r\n];\r\n\r\nconst LatestTransaction = () => {\r\n  const [latestTransaction, setLatestTransaction] = useState()\r\n  console.log(\"latestTransaction\", latestTransaction)\r\n  useEffect(() => {\r\n    getLatestTransaction();\r\n  }, []);\r\n  // const QQQ = localStorage.getItem(\"token\")\r\n  // console.log(\"QQQ\", QQQ)\r\n  // let body={\"startdate\":start,\"enddate\":end}\r\n  // let headers={\"x-api-key\":this.tokenService.getUser()['api-key']}\r\n  // return this.http.post<any>(DATA_API+'orders',body,{headers})\r\n  // TOKEN LOCAL STORAGE\r\n\r\n  const  getUser =() => {\r\n    const user = window.sessionStorage.getItem('token');\r\n    if (user) {\r\n      let access_token=JSON.parse(user).access_token\r\n      let decoded_token=jwtDecode(access_token)\r\n      return decoded_token\r\n      //return JSON.parse(user);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const getLatestTransaction = async (dataLatest) => {\r\n    // try {\r\n    //   const response = await fetch(\r\n    //    \"https://api.raspi-geek.com/v1/latestorder\",\r\n    //     {\r\n    //       method: \"GET\",\r\n    //       //  headers:{\"x-api-key\":localStorage.getItem(\"token\")['api-key']}\r\n\r\n    //       // headers: {\r\n    //       //   \"Content-Type\": \"application/json\",\r\n    //       //   Authorization: localStorage.getItem(\"token\"),\r\n    //       // },\r\n    //       headers: {'Content-Type': 'application/json', \r\n    //       Authorization: localStorage.getItem(\"token\")\r\n    //     },\r\n    //   // body: JSON.stringify(data),\r\n    //     }\r\n    //   );\r\n    //   let res = await response.json();\r\n    //   // let res =response\r\n    //   // console.warn(xhr.responseText)\r\n    //   // console.log(\"resresres\", res.data['Records'].forEach(element => {\r\n    //   //   this.newArr.push({ \"invoice_id\": element[0]['stringValue'], \"merchant_id\": element[2]['stringValue'], \"total_value\": element[3]['stringValue'], \"created_at\": element[1]['stringValue'] })\r\n    //   // }));\r\n    //   setLatestTransaction(res);\r\n    // } catch (err) {\r\n    //   console.log(err.message);\r\n    // }\r\n    // try {\r\n\r\n  //   const res = await fetch(`${process.env.REACT_APP_URL}/latestorder${dataLatest}`,\r\n  //   {\r\n  //     method: \"GET\",\r\n  //            headers: {\r\n  //              \"Content-Type\": \"application/json\",\r\n  //              Authorization: localStorage.getItem(\"token\"),\r\n  //            },\r\n  //   },    reqOptions('GET'))\r\n  //   const resJson = await res.json()\r\n  //   // return resJson\r\n  //   console.log(\"res\", res)\r\n  //   console.log(\"resJson\", resJson)\r\n  // } catch (err) {\r\n  //   console.error('err', err);\r\n  const token = localStorage.getItem('token')\r\n  const headers = {\r\n    'x-api-key': 'api-key',\r\n    'content-type': 'application/json',\r\n    'Authorization': `Bearer ${token}`\r\n  }\r\n  \r\n  const response = await fetch(\r\n     \"https://api.raspi-geek.com/v1/latestorder\",\r\n     { headers }\r\n  );\r\n\r\n  const ajson = await response.json();\r\n  console.log('json', ajson)\r\n    console.log(\"response\",response)\r\n\r\n//   try {\r\n//     const token = localStorage.getItem('token')\r\n// const apiURL = `https://api.raspi-geek.com/v1/latestorder`\r\n//     const response = await fetch(apiURL, {\r\n//             method: 'GET',\r\n\r\n//             headers: {\r\n\r\n//               \"x-api-key\":token['api-key'],\r\n//                 'Content-type': 'application/json',\r\n//                 // 'Authorization': `Bearer ${token}`, // notice the Bearer before your token\r\n//             },\r\n//             // body: JSON.stringify(yourNewData)\r\n//         })\r\n//     const json = await response;\r\n//     console.log('json', json)\r\n//     console.log(\"response\",response)\r\n//   } catch (err) {\r\n//     console.error('err', err);\r\n//   }\r\n  };\r\n  return (\r\n    <Widget styleName=\"gx-order-history\"\r\n      title={\r\n        <h2 className=\"h2 gx-text-capitalize gx-mb-0\">\r\n         10 Latest Transaction\r\n</h2>\r\n      } extra={\r\n        <p className=\"gx-text-primary gx-mb-0 gx-pointer\">Detailed History</p>\r\n      }>\r\n      <div className=\"gx-table-responsive\">\r\n        <Table className=\"gx-table-no-bordered\" columns={columns} dataSource={data} pagination={false} bordered={false}\r\n          size=\"small\" />\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nexport default LatestTransaction;\r\n"]},"metadata":{},"sourceType":"module"}