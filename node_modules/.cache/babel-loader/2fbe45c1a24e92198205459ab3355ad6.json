{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertChildrenToColumns = convertChildrenToColumns;\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\n\nvar _legacyUtil = require(\"../utils/legacyUtil\");\n\nvar _constant = require(\"../constant\");\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"fixed\"];\n\nfunction convertChildrenToColumns(children) {\n  return (0, _toArray.default)(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n        props = _ref.props;\n    var nodeChildren = props.children,\n        restProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var column = (0, _objectSpread2.default)({\n      key: key\n    }, restProps);\n\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n\n    return column;\n  });\n}\n\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat((0, _toConsumableArray2.default)(list), (0, _toConsumableArray2.default)(flatColumns(subColumns).map(function (subColum) {\n        return (0, _objectSpread2.default)({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat((0, _toConsumableArray2.default)(list), [(0, _objectSpread2.default)((0, _objectSpread2.default)({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      (0, _warning.default)(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n\n  var allFixRight = true;\n\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      (0, _warning.default)(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = (0, _objectWithoutProperties2.default)(column, _excluded2); // Convert `fixed='left'` to `fixed='right'` instead\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return (0, _objectSpread2.default)({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n      columns = _ref2.columns,\n      children = _ref2.children,\n      expandable = _ref2.expandable,\n      expandedKeys = _ref2.expandedKeys,\n      getRowKey = _ref2.getRowKey,\n      onTriggerExpand = _ref2.onTriggerExpand,\n      expandIcon = _ref2.expandIcon,\n      rowExpandable = _ref2.rowExpandable,\n      expandIconColumnIndex = _ref2.expandIconColumnIndex,\n      direction = _ref2.direction,\n      expandRowByClick = _ref2.expandRowByClick,\n      columnWidth = _ref2.columnWidth,\n      fixed = _ref2.fixed;\n  var baseColumns = React.useMemo(function () {\n    return columns || convertChildrenToColumns(children);\n  }, [columns, children]); // ========================== Expand ==========================\n\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n\n      var cloneColumns = baseColumns.slice(); // >>> Warning if use `expandIconColumnIndex`\n\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex >= 0) {\n        (0, _warning.default)(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      } // >>> Insert expand column if not exist\n\n\n      if (!cloneColumns.includes(_constant.EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex || 0;\n\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, _constant.EXPAND_COLUMN);\n        }\n      } // >>> Deduplicate additional expand column\n\n\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === _constant.EXPAND_COLUMN;\n      }).length > 1) {\n        (0, _warning.default)(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n\n      var expandColumnIndex = cloneColumns.indexOf(_constant.EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== _constant.EXPAND_COLUMN || index === expandColumnIndex;\n      }); // >>> Check if expand column need to fixed\n\n      var prevColumn = baseColumns[expandColumnIndex];\n      var fixedColumn;\n\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      } // >>> Create expandable column\n\n\n      var expandColumn = (_expandColumn = {}, (0, _defineProperty2.default)(_expandColumn, _legacyUtil.INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), (0, _defineProperty2.default)(_expandColumn, \"title\", ''), (0, _defineProperty2.default)(_expandColumn, \"fixed\", fixedColumn), (0, _defineProperty2.default)(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), (0, _defineProperty2.default)(_expandColumn, \"width\", columnWidth), (0, _defineProperty2.default)(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === _constant.EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n\n    if (process.env.NODE_ENV !== 'production' && baseColumns.includes(_constant.EXPAND_COLUMN)) {\n      (0, _warning.default)(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n\n    return baseColumns.filter(function (col) {\n      return col !== _constant.EXPAND_COLUMN;\n    });\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]); // ========================= Transform ========================\n\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]); // ========================== Flatten =========================\n\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction]); // Only check out of production since it's waste for each render\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningFixed(flattenColumns);\n  }\n\n  return [mergedColumns, flattenColumns];\n}\n\nvar _default = useColumns;\nexports.default = _default;","map":{"version":3,"sources":["/home/rachmat/Documents/Emtres/bapenda-pajak/node_modules/rc-table/lib/hooks/useColumns.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","convertChildrenToColumns","default","_defineProperty2","_toConsumableArray2","_objectSpread2","_objectWithoutProperties2","React","_warning","_toArray","_legacyUtil","_constant","_excluded","_excluded2","children","filter","node","isValidElement","map","_ref","key","props","nodeChildren","restProps","column","flatColumns","columns","reduce","list","fixed","parsedFixed","subColumns","length","concat","subColum","warningFixed","flattenColumns","allFixLeft","i","col","allFixRight","_i","_col","revertForRtl","useColumns","_ref2","transformColumns","prefixCls","expandable","expandedKeys","getRowKey","onTriggerExpand","expandIcon","rowExpandable","expandIconColumnIndex","direction","expandRowByClick","columnWidth","baseColumns","useMemo","withExpandColumns","_expandColumn","cloneColumns","slice","process","env","NODE_ENV","includes","EXPAND_COLUMN","expandColIndex","splice","c","expandColumnIndex","indexOf","index","prevColumn","fixedColumn","expandColumn","INTERNAL_COL_DEFINE","className","columnType","render","_","record","rowKey","expanded","has","recordExpandable","icon","onExpand","createElement","onClick","e","stopPropagation","mergedColumns","finalColumns","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertChildrenToColumns = convertChildrenToColumns;\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\n\nvar _legacyUtil = require(\"../utils/legacyUtil\");\n\nvar _constant = require(\"../constant\");\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"fixed\"];\n\nfunction convertChildrenToColumns(children) {\n  return (0, _toArray.default)(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n        props = _ref.props;\n    var nodeChildren = props.children,\n        restProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var column = (0, _objectSpread2.default)({\n      key: key\n    }, restProps);\n\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n\n    return column;\n  });\n}\n\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat((0, _toConsumableArray2.default)(list), (0, _toConsumableArray2.default)(flatColumns(subColumns).map(function (subColum) {\n        return (0, _objectSpread2.default)({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat((0, _toConsumableArray2.default)(list), [(0, _objectSpread2.default)((0, _objectSpread2.default)({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      (0, _warning.default)(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n\n  var allFixRight = true;\n\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      (0, _warning.default)(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = (0, _objectWithoutProperties2.default)(column, _excluded2); // Convert `fixed='left'` to `fixed='right'` instead\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return (0, _objectSpread2.default)({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n      columns = _ref2.columns,\n      children = _ref2.children,\n      expandable = _ref2.expandable,\n      expandedKeys = _ref2.expandedKeys,\n      getRowKey = _ref2.getRowKey,\n      onTriggerExpand = _ref2.onTriggerExpand,\n      expandIcon = _ref2.expandIcon,\n      rowExpandable = _ref2.rowExpandable,\n      expandIconColumnIndex = _ref2.expandIconColumnIndex,\n      direction = _ref2.direction,\n      expandRowByClick = _ref2.expandRowByClick,\n      columnWidth = _ref2.columnWidth,\n      fixed = _ref2.fixed;\n  var baseColumns = React.useMemo(function () {\n    return columns || convertChildrenToColumns(children);\n  }, [columns, children]); // ========================== Expand ==========================\n\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n\n      var cloneColumns = baseColumns.slice(); // >>> Warning if use `expandIconColumnIndex`\n\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex >= 0) {\n        (0, _warning.default)(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      } // >>> Insert expand column if not exist\n\n\n      if (!cloneColumns.includes(_constant.EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex || 0;\n\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, _constant.EXPAND_COLUMN);\n        }\n      } // >>> Deduplicate additional expand column\n\n\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === _constant.EXPAND_COLUMN;\n      }).length > 1) {\n        (0, _warning.default)(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n\n      var expandColumnIndex = cloneColumns.indexOf(_constant.EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== _constant.EXPAND_COLUMN || index === expandColumnIndex;\n      }); // >>> Check if expand column need to fixed\n\n      var prevColumn = baseColumns[expandColumnIndex];\n      var fixedColumn;\n\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      } // >>> Create expandable column\n\n\n      var expandColumn = (_expandColumn = {}, (0, _defineProperty2.default)(_expandColumn, _legacyUtil.INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), (0, _defineProperty2.default)(_expandColumn, \"title\", ''), (0, _defineProperty2.default)(_expandColumn, \"fixed\", fixedColumn), (0, _defineProperty2.default)(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), (0, _defineProperty2.default)(_expandColumn, \"width\", columnWidth), (0, _defineProperty2.default)(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === _constant.EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n\n    if (process.env.NODE_ENV !== 'production' && baseColumns.includes(_constant.EXPAND_COLUMN)) {\n      (0, _warning.default)(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n\n    return baseColumns.filter(function (col) {\n      return col !== _constant.EXPAND_COLUMN;\n    });\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]); // ========================= Transform ========================\n\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]); // ========================== Flatten =========================\n\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction]); // Only check out of production since it's waste for each render\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningFixed(flattenColumns);\n  }\n\n  return [mergedColumns, flattenColumns];\n}\n\nvar _default = useColumns;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}