{"ast":null,"code":"var _jsxFileName = \"/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/containers/Sidebar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Drawer, Layout } from \"antd\";\nimport SidebarContent from \"./SidebarContent\";\nimport { toggleCollapsedSideNav } from \"../../appRedux/actions\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE, THEME_TYPE_LITE } from \"../../constants/ThemeSetting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Sider\n} = Layout;\n\nconst Sidebar = () => {\n  _s();\n\n  let [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const {\n    themeType,\n    navStyle\n  } = useSelector(_ref => {\n    let {\n      settings\n    } = _ref;\n    return settings;\n  });\n  const navCollapsed = useSelector(_ref2 => {\n    let {\n      common\n    } = _ref2;\n    return common.navCollapsed;\n  });\n  const width = useSelector(_ref3 => {\n    let {\n      common\n    } = _ref3;\n    return common.width;\n  });\n  const dispatch = useDispatch();\n\n  const onToggleCollapsedNav = () => {\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\n  };\n\n  useEffect(() => {\n    setSidebarCollapsed(navStyle === NAV_STYLE_MINI_SIDEBAR);\n  }, [navStyle]);\n  let drawerStyle = \"gx-collapsed-sidebar\";\n\n  if (navStyle === NAV_STYLE_FIXED) {\n    drawerStyle = \"\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n    drawerStyle = \"gx-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar\";\n  } else if (navStyle === NAV_STYLE_DRAWER) {\n    drawerStyle = \"gx-collapsed-sidebar\";\n  }\n\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\n    drawerStyle = \"gx-collapsed-sidebar\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Sider, {\n    className: `gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`,\n    trigger: null,\n    collapsed: width < TAB_SIZE ? false : sidebarCollapsed || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n    theme: themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\",\n    collapsible: true,\n    children: navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ? /*#__PURE__*/_jsxDEV(Drawer, {\n      className: `gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`,\n      placement: \"left\",\n      closable: false,\n      onClose: onToggleCollapsedNav,\n      visible: navCollapsed,\n      children: /*#__PURE__*/_jsxDEV(SidebarContent, {\n        sidebarCollapsed: sidebarCollapsed,\n        setSidebarCollapsed: setSidebarCollapsed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SidebarContent, {\n      sidebarCollapsed: sidebarCollapsed,\n      setSidebarCollapsed: setSidebarCollapsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"L5pt/vC0KsG7rDcwctgHdCBhVGk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/containers/Sidebar/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Drawer","Layout","SidebarContent","toggleCollapsedSideNav","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","TAB_SIZE","THEME_TYPE_LITE","Sider","Sidebar","sidebarCollapsed","setSidebarCollapsed","themeType","navStyle","settings","navCollapsed","common","width","dispatch","onToggleCollapsedNav","drawerStyle"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Drawer, Layout} from \"antd\";\r\n\r\nimport SidebarContent from \"./SidebarContent\";\r\nimport {toggleCollapsedSideNav} from \"../../appRedux/actions\";\r\nimport {\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  TAB_SIZE,\r\n  THEME_TYPE_LITE\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst {Sider} = Layout;\r\n\r\nconst Sidebar = () => {\r\n  let [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const {themeType, navStyle} = useSelector(({settings}) => settings);\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleCollapsedNav = () => {\r\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSidebarCollapsed(navStyle === NAV_STYLE_MINI_SIDEBAR)\r\n  }, [navStyle])\r\n\r\n  let drawerStyle = \"gx-collapsed-sidebar\";\r\n\r\n  if (navStyle === NAV_STYLE_FIXED) {\r\n    drawerStyle = \"\";\r\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\r\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\r\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\r\n    drawerStyle = \"gx-custom-sidebar\"\r\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\r\n    drawerStyle = \"gx-mini-sidebar\";\r\n  } else if (navStyle === NAV_STYLE_DRAWER) {\r\n    drawerStyle = \"gx-collapsed-sidebar\"\r\n  }\r\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR\r\n    || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\r\n    drawerStyle = \"gx-collapsed-sidebar\"\r\n  }\r\n\r\n  return (\r\n    <Sider\r\n      className={`gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`}\r\n      trigger={null}\r\n      collapsed={(width < TAB_SIZE ? false : sidebarCollapsed || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR)}\r\n      theme={themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\"}\r\n      collapsible>\r\n      {\r\n        navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ?\r\n          <Drawer\r\n            className={`gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`}\r\n            placement=\"left\"\r\n            closable={false}\r\n            onClose={onToggleCollapsedNav}\r\n            visible={navCollapsed}>\r\n            <SidebarContent sidebarCollapsed={sidebarCollapsed} setSidebarCollapsed={setSidebarCollapsed}/>\r\n          </Drawer> :\r\n          <SidebarContent sidebarCollapsed={sidebarCollapsed} setSidebarCollapsed={setSidebarCollapsed}/>\r\n      }\r\n    </Sider>)\r\n};\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}