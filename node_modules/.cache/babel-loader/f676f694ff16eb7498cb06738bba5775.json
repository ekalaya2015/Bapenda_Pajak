{"ast":null,"code":"var _jsxFileName = \"/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/routes/Dashboard/PendapatanTahunIni.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row } from \"antd\";\nimport { Bar, BarChart, ResponsiveContainer, Tooltip } from \"recharts\";\nimport Widget from \"../../components/Widget/index\";\nimport EcommerceStatus from \"../../components/Metrics/EcommerceStatus\";\nimport * as moment from 'moment';\nimport { forkJoin, mergeMap } from 'rxjs';\nimport \"../../assets/styles/flip-card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PendapatanTahunIni = props => {\n  _s();\n\n  const {\n    latestTransaction,\n    setLatestTransaction,\n    getLatestTransaction\n  } = props;\n  const tahunIni = moment().format('YYYY-MM');\n  const tahunLalu = moment().subtract(1, 'years').format('YYYY');\n  const [moneyThisYear, setMoneyThisYear] = useState();\n  const [moneyLastYear, setMoneyLastYear] = useState();\n  const tahun = latestTransaction && latestTransaction.map(row => ({\n    nilai: row[3].stringValue,\n    tanggal_transaksi: moment(row[1].stringValue).format('YYYY-MM')\n  }));\n  const objTahunIni = tahun && tahun.filter(o => o.tanggal_transaksi === tahunIni);\n  const currentTahunIni = objTahunIni && objTahunIni.map(v => Number(v.nilai)).reduce((sum, current) => sum + current, 0);\n  const objTahunLalu = tahun && tahun.filter(o => o.tanggal_transaksi === tahunLalu);\n  const currentTahunLalu = objTahunLalu && objTahunLalu.map(v => Number(v.nilai)).reduce((sum, current) => sum + current, 0);\n  console.log(\"tahunLalu\", tahunIni);\n  console.log(\"objtahunLalu\", objTahunIni);\n  console.log(\"currentTahunLalu\", currentTahunIni);\n  useEffect(() => {\n    setMoneyThisYear(currentTahunIni);\n  }, [currentTahunIni]);\n  useEffect(() => {\n    setMoneyLastYear(currentTahunLalu);\n  }, [currentTahunLalu]);\n  const formatter = new Intl.NumberFormat('id-ID', {\n    style: 'currency',\n    currency: 'IDR' // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xl: 4,\n    lg: 8,\n    md: 8,\n    sm: 12,\n    xs: 24,\n    className: \"e-commerce-status\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flip-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flip-card-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-card-front\",\n          children: /*#__PURE__*/_jsxDEV(EcommerceStatus, {\n            color: \"blue\",\n            icon: \"revenue-new\",\n            title: formatter.format(currentTahunIni),\n            colorTitle: \"black\",\n            moneyThisYear: moneyThisYear,\n            setMoneyThisYear: setMoneyThisYear,\n            moneyLastYear: moneyLastYear,\n            setMoneyLastYear: setMoneyLastYear,\n            objTahunIni: objTahunIni,\n            subTitle: \"Total Pendapatan (tahun Ini)\",\n            colorSubTitle: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flip-card-back\",\n          children: /*#__PURE__*/_jsxDEV(EcommerceStatus, {\n            color: \"grey\",\n            icon: \"revenue-new\",\n            title: formatter.format(currentTahunLalu),\n            colorTitle: \"black\" // moneyToday={moneyToday} setMoneyToday ={setMoneyToday} moneyYesterday={moneyYesterday} setMoneyYesterday={setMoneyYesterday}\n            ,\n            subTitle: \"Total Pendapatan (tahun Lalu)\",\n            colorSubTitle: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PendapatanTahunIni, \"xXJGLHvnWNnwbSui/ySg/uReKXg=\");\n\n_c = PendapatanTahunIni;\nexport default PendapatanTahunIni;\n\nvar _c;\n\n$RefreshReg$(_c, \"PendapatanTahunIni\");","map":{"version":3,"sources":["/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/routes/Dashboard/PendapatanTahunIni.js"],"names":["React","useState","useEffect","Col","Row","Bar","BarChart","ResponsiveContainer","Tooltip","Widget","EcommerceStatus","moment","forkJoin","mergeMap","PendapatanTahunIni","props","latestTransaction","setLatestTransaction","getLatestTransaction","tahunIni","format","tahunLalu","subtract","moneyThisYear","setMoneyThisYear","moneyLastYear","setMoneyLastYear","tahun","map","row","nilai","stringValue","tanggal_transaksi","objTahunIni","filter","o","currentTahunIni","v","Number","reduce","sum","current","objTahunLalu","currentTahunLalu","console","log","formatter","Intl","NumberFormat","style","currency"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport { Bar, BarChart, ResponsiveContainer, Tooltip } from \"recharts\";\r\nimport Widget from \"../../components/Widget/index\"\r\nimport EcommerceStatus from \"../../components/Metrics/EcommerceStatus\";\r\nimport * as moment from 'moment';\r\nimport { forkJoin, mergeMap } from 'rxjs';\r\nimport \"../../assets/styles/flip-card.css\"\r\n\r\nconst PendapatanTahunIni = (props) => {\r\n  const {latestTransaction, setLatestTransaction, getLatestTransaction} = props\r\n  const tahunIni = moment().format('YYYY-MM')\r\n  const tahunLalu =moment().subtract(1,'years').format('YYYY')\r\n\r\n  const [moneyThisYear, setMoneyThisYear] = useState()\r\n  const [moneyLastYear, setMoneyLastYear] = useState()\r\n\r\n  const tahun = latestTransaction && latestTransaction.map(row => ({\r\n    nilai: row[3].stringValue,\r\n    tanggal_transaksi: moment(row[1].stringValue).format('YYYY-MM')\r\n  }));\r\n  const objTahunIni = tahun && tahun.filter(o => o.tanggal_transaksi === tahunIni);\r\n  const currentTahunIni = objTahunIni && objTahunIni.map(v => Number(v.nilai))\r\n    .reduce((sum, current) => sum + current, 0)\r\n\r\n    const objTahunLalu = tahun && tahun.filter(o => o.tanggal_transaksi === tahunLalu);\r\n    const currentTahunLalu = objTahunLalu && objTahunLalu.map(v => Number(v.nilai))\r\n      .reduce((sum, current) => sum + current, 0)    \r\nconsole.log(\"tahunLalu\",tahunIni)\r\n  console.log(\"objtahunLalu\", objTahunIni);\r\n  console.log(\"currentTahunLalu\", currentTahunIni);\r\n\r\n  useEffect(() => {\r\n    setMoneyThisYear(currentTahunIni);\r\n  }, [currentTahunIni]);\r\n  \r\n  useEffect(() => {\r\n    setMoneyLastYear(currentTahunLalu);\r\n  }, [currentTahunLalu]);\r\n  const formatter = new Intl.NumberFormat('id-ID', {\r\n    style: 'currency',\r\n    currency: 'IDR',\r\n  \r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n  });\r\n  return (\r\n    <Col xl={4} lg={8} md={8} sm={12} xs={24} \r\n    className=\"e-commerce-status\" >\r\n      <div className=\"flip-card\" >\r\n        <div className=\"flip-card-inner\" >\r\n          <div className=\"flip-card-front\" >\r\n          <EcommerceStatus color=\"blue\"\r\n  icon=\"revenue-new\" title={formatter.format(currentTahunIni)} colorTitle=\"black\" \r\n  moneyThisYear={moneyThisYear} setMoneyThisYear ={setMoneyThisYear} moneyLastYear={moneyLastYear}  setMoneyLastYear={setMoneyLastYear} objTahunIni={objTahunIni}\r\n              subTitle=\"Total Pendapatan (tahun Ini)\" colorSubTitle=\"black\"  />\r\n          </div>\r\n          <div class=\"flip-card-back\">\r\n            <EcommerceStatus color=\"grey\" icon=\"revenue-new\" title={formatter.format(currentTahunLalu)} colorTitle=\"black\" \r\n              // moneyToday={moneyToday} setMoneyToday ={setMoneyToday} moneyYesterday={moneyYesterday} setMoneyYesterday={setMoneyYesterday}\r\n              subTitle=\"Total Pendapatan (tahun Lalu)\" colorSubTitle=\"black\"/>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PendapatanTahunIni;\r\n\r\n"]},"metadata":{},"sourceType":"module"}