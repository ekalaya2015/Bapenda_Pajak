{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from '../reducers';\n\nconst createBrowserHistory = require('history').createBrowserHistory;\n\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [thunk, routeMiddleware];\nexport default function configureStore() {\n  let preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return createStore(createRootReducer(history), // root reducer with router state\n  preloadedState, compose(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  ...middlewares)));\n}","map":{"version":3,"sources":["/home/rachmat/Documents/belajar/wieldy-v-2.5.2/starter-templete-jwt-auth/src/appRedux/store/index.js"],"names":["applyMiddleware","compose","createStore","routerMiddleware","thunk","createRootReducer","createBrowserHistory","require","history","routeMiddleware","middlewares","configureStore","preloadedState"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,aAA9B;;AAEA,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,oBAAhD;;AACA,OAAO,MAAME,OAAO,GAAGF,oBAAoB,EAApC;AACP,MAAMG,eAAe,GAAGN,gBAAgB,CAACK,OAAD,CAAxC;AACA,MAAME,WAAW,GAAG,CAACN,KAAD,EAAQK,eAAR,CAApB;AAEA,eAAe,SAASE,cAAT,GAA6C;AAAA,MAArBC,cAAqB,uEAAJ,EAAI;AAC1D,SAAOV,WAAW,CAChBG,iBAAiB,CAACG,OAAD,CADD,EACY;AAC5BI,EAAAA,cAFgB,EAGhBX,OAAO,CACLD,eAAe,CACbG,gBAAgB,CAACK,OAAD,CADH,EACc;AAC3B,KAAGE,WAFU,CADV,CAHS,CAAlB;AAUD","sourcesContent":["import {applyMiddleware, compose, createStore} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../reducers'\r\n\r\nconst createBrowserHistory = require('history').createBrowserHistory;\r\nexport const history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst middlewares = [thunk, routeMiddleware];\r\n\r\nexport default function configureStore(preloadedState = {}) {\r\n  return createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      ),\r\n    ),\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}